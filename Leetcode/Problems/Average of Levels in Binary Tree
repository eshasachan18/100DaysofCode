/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<double> averageOfLevels(TreeNode* root) 
    {
        vector<double>ans;
        if(root==NULL){return ans;}
        queue<TreeNode*>q;
        q.push(root);q.push(NULL);long long sum=0,c=0;
        while(!q.empty())
        {
          auto node=q.front();
            q.pop();
            if(node!=NULL)
            {
                sum+=node->val;
                c+=1;
                if(node->left){q.push(node->left);}
                if(node->right){q.push(node->right);}
            }
            else
            {
                ans.push_back((double)sum/c);
             sum=0;c=0;
                if(!q.empty()){q.push(NULL);}
            }
        }
        return ans;
    }
};
