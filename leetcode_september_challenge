/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> getAllElements(TreeNode* root1, TreeNode* root2) 
    {
        vector<int>v;
        queue<TreeNode*>q1;
        queue<TreeNode*>q2;
        if(root1!=NULL){q1.push(root1);}
        while(!q1.empty())
        {
            auto node=q1.front();
            v.push_back(node->val);
            q1.pop();
            if(node->left){q1.push(node->left);}
            if(node->right){q1.push(node->right);}
        }
        if(root2!=NULL){q2.push(root2);}
        while(!q2.empty())
        {
            auto node=q2.front();
            v.push_back(node->val);
            q2.pop();
            if(node->left){q2.push(node->left);}
            if(node->right){q2.push(node->right);}
        }
        sort(v.begin(),v.end());
        return v;
    }
};
